generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Chore {
  id           String         @id @default(uuid())
  task         String
  createdAt    DateTime       @default(now())
  updatedAt    DateTime       @updatedAt
  pointValue   Int            @default(1)
  order        Int            @default(1)
  icon         String         @default("")
  timeOfDay    Int            @default(1)
  repeat       Int
  startDate    String?
  endDate      String?
  personId     String?
  person       Person?        @relation(fields: [personId], references: [id])
  chore_status Chore_Status[]
}

model Chore_Status {
  id         Int     @id @default(autoincrement())
  choreId    String
  date       String
  pointValue Int     @default(0)
  completed  Boolean @default(false)
  chore      Chore   @relation(fields: [choreId], references: [id], onDelete: Cascade)
}

model Person {
  id        String   @id @default(uuid())
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  color     String   @default("")
  order     Int      @default(1)
  chores    Chore[]
  groupId   String
  group     Group    @relation(fields: [groupId], references: [id], onDelete: Cascade)
}

model Group {
  id        String   @id @default(uuid())
  groupName String
  userId    String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  isDefault Boolean
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  Person    Person[]
}

model User {
  id           String   @id @default(uuid())
  groups       Group[]
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  username     String   @unique
  passwordHash String
}
